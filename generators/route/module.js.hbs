import { handle, Action } from 'hake-redux'
import { Map } from 'immutable'

/*
 * {{ properCase name }} constants
 */
export const LOAD_{{ constantCase props }} = 'LOAD_{{ constantCase props }}'

/**
 * {{ properCase props }} actions
 * @returns Action
 */
export const load{{ properCase props }} = (): Action => {
    return {
        type: LOAD_{{ constantCase props }},
        promise: http => http.post('/{{  props }}')
    }
}

/**
 * initial state 
 * @param  {[]}} 
 */
export const initialState = Map({
    {{ props }}: null,
    loading: false
})
/**
 * {{ properCase name }} reducer
 * @param  {} state=initialState
 * @param  {} action
 */
export default (state = initialState, action: Action) => {

    const { type, payload } = action
    switch (type) {
        case LOAD_{{ constantCase props }}:
            return handle(state, action, {                
                start: s => state.set('loading', true),
                success: s => state.set('{{ props }}', payload.data).set('loading', false),
                failure: s => state.set('{{ props }}', payload.data).set('loading', false)
            })
        default:
            return state
    }
}